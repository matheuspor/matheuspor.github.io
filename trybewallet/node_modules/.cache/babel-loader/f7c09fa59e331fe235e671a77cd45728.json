{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/WalletTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nexport default class WalletTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.makeTable = this.makeTable.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  deleteItem(item, expenses) {\n    const {\n      wallet\n    } = this.props; // console.log(item);\n    // console.log(expenses);\n\n    const updatedExpenses = expenses.filter(res => res.id !== item.id);\n    let updatedTotal = wallet.total; // console.log(updatedExpenses);\n\n    if (updatedExpenses.length) {\n      updatedTotal = updatedExpenses.reduce((acc, value) => console.log(value.convertedValue));\n      console.log(updatedTotal); // console.log(updatedExpenses);\n    } // console.log(updatedTotal);\n\n  }\n\n  makeTable(expenses) {\n    return expenses.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, item.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, item.tag), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, item.method), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, item.value), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, item.exchangeRates[item.currency].name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, parseFloat(item.exchangeRates[item.currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, parseFloat(item.exchangeRates[item.currency].ask * item.value).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      onClick: () => this.deleteItem(item, expenses),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n  render() {\n    const {\n      wallet: {\n        expenses\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \" Descri\\xE7\\xE3o \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \" Tag \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \" M\\xE9todo de pagamento \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \" Valor \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \" Moeda \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \" C\\xE2mbio utilizado \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \" Valor convertido \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \" Moeda de convers\\xE3o \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \" Editar/Excluir \"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, expenses && this.makeTable(expenses)));\n  }\n\n} // const mapStateToProps = (state) => ({\n//   wallet: state.wallet,\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   sendExpenses: (expense) => dispatch(setExpenses(expense)),\n// });\n\nWalletTable.propTypes = {\n  wallet: PropTypes.shape({\n    expenses: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/WalletTable.js"],"names":["React","PropTypes","FontAwesomeIcon","faTrash","WalletTable","Component","constructor","props","makeTable","bind","deleteItem","item","expenses","wallet","updatedExpenses","filter","res","id","updatedTotal","total","length","reduce","acc","value","console","log","convertedValue","map","description","tag","method","exchangeRates","currency","name","parseFloat","ask","toFixed","render","propTypes","shape","arrayOf","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKN,KAAxB,CADyB,CAEzB;AACA;;AACA,UAAMO,eAAe,GAAGF,QAAQ,CAACG,MAAT,CAAgBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWN,IAAI,CAACM,EAAvC,CAAxB;AACA,QAAIC,YAAY,GAAGL,MAAM,CAACM,KAA1B,CALyB,CAMzB;;AACA,QAAIL,eAAe,CAACM,MAApB,EAA4B;AAC1BF,MAAAA,YAAY,GAAGJ,eAAe,CAACO,MAAhB,CAAuB,CAACC,GAAD,EAAMC,KAAN,KAAgBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,cAAlB,CAAvC,CAAf;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ,EAF0B,CAG1B;AACD,KAXwB,CAYzB;;AACD;;AAEDV,EAAAA,SAAS,CAACI,QAAD,EAAW;AAClB,WAAOA,QAAQ,CAACe,GAAT,CAAchB,IAAD,iBAClB;AAAI,MAAA,GAAG,EAAGA,IAAI,CAACM,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,IAAI,CAACiB,WADR,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjB,IAAI,CAACkB,GADR,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGlB,IAAI,CAACmB,MADR,CAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnB,IAAI,CAACY,KADR,CAVF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,IAAI,CAACoB,aAAL,CAAmBpB,IAAI,CAACqB,QAAxB,EAAkCC,IADrC,CAbF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,UAAU,CAAEvB,IAAI,CAACoB,aAAL,CAAmBpB,IAAI,CAACqB,QAAxB,EAAkCG,GAApC,CAAV,CAAoDC,OAApD,CAA4D,CAA5D,CADH,CAhBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,UAAU,CACRvB,IAAI,CAACoB,aAAL,CAAmBpB,IAAI,CAACqB,QAAxB,EAAkCG,GAAlC,GAAwCxB,IAAI,CAACY,KADrC,CAAV,CAGCa,OAHD,CAGS,CAHT,CADH,CAnBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAGjC,OAAxB;AAAkC,MAAA,OAAO,EAAG,MAAM,KAAKO,UAAL,CAAgBC,IAAhB,EAAsBC,QAAtB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5BF,CADK,CAAP;AAkCD;;AAEDyB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAExB,MAAAA,MAAM,EAAE;AAAED,QAAAA;AAAF;AAAV,QAA2B,KAAKL,KAAtC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATF,CADF,CADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,QAAQ,IACJ,KAAKJ,SAAL,CAAeI,QAAf,CAFP,CAdF,CADF;AAqBD;;AAlFsD,C,CAqFzD;AACA;AACA;AAEA;AACA;AACA;;AAEAR,WAAW,CAACkC,SAAZ,GAAwB;AACtBzB,EAAAA,MAAM,EAAEZ,SAAS,CAACsC,KAAV,CAAgB;AACtB3B,IAAAA,QAAQ,EAAEX,SAAS,CAACuC,OAAV,CAAkBvC,SAAS,CAACwC,MAA5B;AADY,GAAhB,EAELC;AAHmB,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nexport default class WalletTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.makeTable = this.makeTable.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  deleteItem(item, expenses) {\n    const { wallet } = this.props;\n    // console.log(item);\n    // console.log(expenses);\n    const updatedExpenses = expenses.filter(res => res.id !== item.id);\n    let updatedTotal = wallet.total;\n    // console.log(updatedExpenses);\n    if (updatedExpenses.length) {\n      updatedTotal = updatedExpenses.reduce((acc, value) => console.log(value.convertedValue));\n      console.log(updatedTotal);\n      // console.log(updatedExpenses);\n    }\n    // console.log(updatedTotal);\n  }\n\n  makeTable(expenses) {\n    return expenses.map((item) => (\n      <tr key={ item.id }>\n        <td>\n          {item.description}\n        </td>\n        <td>\n          {item.tag}\n        </td>\n        <td>\n          {item.method}\n        </td>\n        <td>\n          {item.value}\n        </td>\n        <td>\n          {item.exchangeRates[item.currency].name}\n        </td>\n        <td>\n          {parseFloat((item.exchangeRates[item.currency].ask)).toFixed(2)}\n        </td>\n        <td>\n          {parseFloat(\n            (item.exchangeRates[item.currency].ask * item.value\n            ),\n          ).toFixed(2)}\n        </td>\n        <td>\n          Real\n        </td>\n        <td>\n          <FontAwesomeIcon icon={ faTrash } onClick={ () => this.deleteItem(item, expenses) } />\n        </td>\n      </tr>\n    ));\n  }\n\n  render() {\n    const { wallet: { expenses } } = this.props;\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th> Descrição </th>\n            <th> Tag </th>\n            <th> Método de pagamento </th>\n            <th> Valor </th>\n            <th> Moeda </th>\n            <th> Câmbio utilizado </th>\n            <th> Valor convertido </th>\n            <th> Moeda de conversão </th>\n            <th> Editar/Excluir </th>\n          </tr>\n        </thead>\n        <tbody>\n          {expenses\n            && this.makeTable(expenses)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// const mapStateToProps = (state) => ({\n//   wallet: state.wallet,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   sendExpenses: (expense) => dispatch(setExpenses(expense)),\n// });\n\nWalletTable.propTypes = {\n  wallet: PropTypes.shape({\n    expenses: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}