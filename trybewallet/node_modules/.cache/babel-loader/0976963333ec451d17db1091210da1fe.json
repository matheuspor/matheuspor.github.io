{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport WalletHeader from './WalletHeader';\nimport { fetchCoins, setCoins, setExpenses } from '../actions';\nimport WalletForm from './WalletForm';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {},\n      total: 0,\n      moeda: 'BRL'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      sendCoin\n    } = this.props;\n    sendCoin();\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState(prevState => ({\n      expense: { ...prevState.expense,\n        [name]: value\n      }\n    }));\n  }\n\n  handleButton() {\n    const {\n      sendExpenses,\n      sendCoin\n    } = this.props;\n    const {\n      expense\n    } = this.state;\n    sendExpenses(expense);\n  }\n\n  render() {\n    const {\n      user,\n      wallet\n    } = this.props;\n    const {\n      total,\n      moeda\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WalletHeader, {\n      total: total,\n      moeda: moeda,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WalletForm, {\n      wallet: wallet,\n      onChange: this.handleChange,\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  wallet: state.wallet\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendCoin: () => dispatch(fetchCoins()),\n  sendExpenses: expense => dispatch(setExpenses(expense))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\nWallet.propTypes = {\n  sendCoin: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string\n  }).isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired\n};","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","PropTypes","connect","WalletHeader","fetchCoins","setCoins","setExpenses","WalletForm","Wallet","Component","constructor","props","state","expense","total","moeda","handleChange","bind","handleButton","componentDidMount","sendCoin","target","name","value","setState","prevState","sendExpenses","render","user","wallet","mapStateToProps","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape","email","string","currencies","arrayOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,WAA/B,QAAkD,YAAlD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKT,KAA1B;AACAS,IAAAA,QAAQ;AACT;;AAEDJ,EAAAA,YAAY,CAAC;AAAEK,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAV,GAAD,EAA8B;AACxC,SAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BZ,MAAAA,OAAO,EAAE,EACP,GAAGY,SAAS,CAACZ,OADN;AAEP,SAACS,IAAD,GAAQC;AAFD;AADmB,KAAhB,CAAd;AAOD;;AAEDL,EAAAA,YAAY,GAAG;AACb,UAAM;AAAEQ,MAAAA,YAAF;AAAgBN,MAAAA;AAAhB,QAA6B,KAAKT,KAAxC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACAc,IAAAA,YAAY,CAACb,OAAD,CAAZ;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKlB,KAA9B;AACA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKH,KAA9B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAGE,KAAtB;AAA8B,MAAA,KAAK,EAAGC,KAAtC;AAA8C,MAAA,IAAI,EAAGa,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAGC,MAArB;AAA8B,MAAA,QAAQ,EAAG,KAAKb,YAA9C;AAA6D,MAAA,OAAO,EAAG,KAAKE,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AA3CkC;;AA8CrC,MAAMY,eAAe,GAAIlB,KAAD,KAAY;AAClCgB,EAAAA,IAAI,EAAEhB,KAAK,CAACgB,IADsB;AAElCC,EAAAA,MAAM,EAAEjB,KAAK,CAACiB;AAFoB,CAAZ,CAAxB;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,QAAQ,EAAE,MAAMY,QAAQ,CAAC5B,UAAU,EAAX,CADgB;AAExCsB,EAAAA,YAAY,EAAGb,OAAD,IAAamB,QAAQ,CAAC1B,WAAW,CAACO,OAAD,CAAZ;AAFK,CAAf,CAA3B;;AAKA,eAAeX,OAAO,CAAC4B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,MAA7C,CAAf;AAEAA,MAAM,CAACyB,SAAP,GAAmB;AACjBb,EAAAA,QAAQ,EAAEnB,SAAS,CAACiC,IAAV,CAAeC,UADR;AAEjBP,EAAAA,IAAI,EAAE3B,SAAS,CAACmC,KAAV,CAAgB;AACpBC,IAAAA,KAAK,EAAEpC,SAAS,CAACqC;AADG,GAAhB,EAEHH,UAJc;AAKjBN,EAAAA,MAAM,EAAE5B,SAAS,CAACmC,KAAV,CAAgB;AACtBG,IAAAA,UAAU,EAAEtC,SAAS,CAACuC,OAAV,CAAkBvC,SAAS,CAACqC,MAA5B;AADU,GAAhB,EAELH;AAPc,CAAnB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport WalletHeader from './WalletHeader';\nimport { fetchCoins, setCoins, setExpenses } from '../actions';\nimport WalletForm from './WalletForm';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {},\n      total: 0,\n      moeda: 'BRL',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  componentDidMount() {\n    const { sendCoin } = this.props;\n    sendCoin();\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState((prevState) => ({\n      expense: {\n        ...prevState.expense,\n        [name]: value,\n      },\n    }\n    ));\n  }\n\n  handleButton() {\n    const { sendExpenses, sendCoin } = this.props;\n    const { expense } = this.state;\n    sendExpenses(expense);\n  }\n\n  render() {\n    const { user, wallet } = this.props;\n    const { total, moeda } = this.state;\n    return (\n      <div>\n        <WalletHeader total={ total } moeda={ moeda } user={ user } />\n        <br />\n        <WalletForm wallet={ wallet } onChange={ this.handleChange } onClick={ this.handleButton } />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendCoin: () => dispatch(fetchCoins()),\n  sendExpenses: (expense) => dispatch(setExpenses(expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n\nWallet.propTypes = {\n  sendCoin: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string,\n  }).isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}