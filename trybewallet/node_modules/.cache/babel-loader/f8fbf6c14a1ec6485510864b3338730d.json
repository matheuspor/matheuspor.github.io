{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/WalletTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { setTotal, setWallet } from '../actions';\nimport { connect } from 'react-redux';\n\nclass WalletTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.makeTable = this.makeTable.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  deleteItem(item, expenses) {\n    const {\n      sendTotal,\n      sendExpenses\n    } = this.props; // console.log(item);\n    // console.log(expenses);\n\n    const updatedExpenses = expenses.filter(res => res.id !== item.id);\n    let updatedTotal = 0; // console.log(updatedExpenses);\n\n    if (updatedExpenses.length) {\n      updatedTotal = updatedExpenses.reduce((acc, value) => {\n        acc += value.convertedValue;\n        return acc;\n      }, 0); // console.log(updatedExpenses);\n    }\n\n    console.log(expenses);\n    console.log(updatedExpenses);\n    this.makeTable(updatedExpenses); // sendExpenses(updatedExpenses);\n\n    sendTotal(updatedTotal);\n  }\n\n  makeTable(expenses) {\n    const {\n      wallet\n    } = this.props;\n\n    if (expenses) {\n      return expenses.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, item.tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, item.method), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, item.value), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, item.exchangeRates[item.currency].name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, parseFloat(item.exchangeRates[item.currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, parseFloat(item.exchangeRates[item.currency].ask * item.value).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrash,\n        onClick: () => this.deleteItem(item, expenses),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }\n\n  render() {\n    const {\n      wallet: {\n        expenses\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \" Descri\\xE7\\xE3o \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \" Tag \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \" M\\xE9todo de pagamento \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \" Valor \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \" Moeda \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \" C\\xE2mbio utilizado \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \" Valor convertido \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \" Moeda de convers\\xE3o \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \" Editar/Excluir \"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, this.makeTable(expenses)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  wallet: state.wallet\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendTotal: total => dispatch(setTotal(total)),\n  sendExpenses: expenses => dispatch(setWallet(expenses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletTable);\nWalletTable.propTypes = {\n  wallet: PropTypes.shape({\n    expenses: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/WalletTable.js"],"names":["React","PropTypes","FontAwesomeIcon","faTrash","setTotal","setWallet","connect","WalletTable","Component","constructor","props","makeTable","bind","deleteItem","item","expenses","sendTotal","sendExpenses","updatedExpenses","filter","res","id","updatedTotal","length","reduce","acc","value","convertedValue","console","log","wallet","map","description","tag","method","exchangeRates","currency","name","parseFloat","ask","toFixed","render","mapStateToProps","state","mapDispatchToProps","dispatch","total","propTypes","shape","arrayOf","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { setTotal, setWallet } from '../actions';\nimport { connect } from 'react-redux';\n\nclass WalletTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.makeTable = this.makeTable.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  deleteItem(item, expenses) {\n    const { sendTotal, sendExpenses } = this.props;\n    // console.log(item);\n    // console.log(expenses);\n    const updatedExpenses = expenses.filter(res => res.id !== item.id);\n    let updatedTotal = 0;\n    // console.log(updatedExpenses);\n    if (updatedExpenses.length) {\n      updatedTotal = updatedExpenses.reduce((acc, value) => {\n        acc += value.convertedValue;\n        return acc;\n      }, 0);\n      // console.log(updatedExpenses);\n    }\n    console.log(expenses);\n    console.log(updatedExpenses);\n    this.makeTable(updatedExpenses);\n    // sendExpenses(updatedExpenses);\n    sendTotal(updatedTotal);\n  }\n\n  makeTable(expenses) {\n    const { wallet } = this.props;\n    if (expenses) {\n      return expenses.map((item) => (\n        <tr key={item.id}>\n          <td>\n            {item.description}\n          </td>\n          <td>\n            {item.tag}\n          </td>\n          <td>\n            {item.method}\n          </td>\n          <td>\n            {item.value}\n          </td>\n          <td>\n            {item.exchangeRates[item.currency].name}\n          </td>\n          <td>\n            {parseFloat((item.exchangeRates[item.currency].ask)).toFixed(2)}\n          </td>\n          <td>\n            {parseFloat(\n              (item.exchangeRates[item.currency].ask * item.value\n              ),\n            ).toFixed(2)}\n          </td>\n          <td>\n            Real\n          </td>\n          <td>\n            <FontAwesomeIcon icon={faTrash} onClick={() => this.deleteItem(item, expenses)} />\n          </td>\n        </tr>\n      ));\n    }\n  }\n\n  render() {\n    const { wallet: { expenses } } = this.props;\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th> Descrição </th>\n            <th> Tag </th>\n            <th> Método de pagamento </th>\n            <th> Valor </th>\n            <th> Moeda </th>\n            <th> Câmbio utilizado </th>\n            <th> Valor convertido </th>\n            <th> Moeda de conversão </th>\n            <th> Editar/Excluir </th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.makeTable(expenses)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendTotal: (total) => dispatch(setTotal(total)),\n  sendExpenses: (expenses) => dispatch(setWallet(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletTable);\n\nWalletTable.propTypes = {\n  wallet: PropTypes.shape({\n    expenses: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}