{"ast":null,"code":"import { ADD_TOTAL, COIN_INFO, EXPENSES, DELETE_ITEM } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  total: 0\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case COIN_INFO:\n      return { ...state,\n        currencies: action.payload\n      };\n\n    case EXPENSES:\n      return { ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n\n    case ADD_TOTAL:\n      {\n        const tot = state.total + action.payload;\n        return { ...state,\n          total: parseFloat(tot.toFixed(2))\n        };\n      }\n\n    case DELETE_ITEM:\n      {\n        const tot = state.total - action.payload.value * action.payload.exchangeRates[action.payload.currency].ask;\n        return { ...state,\n          expenses: state.expenses.filter(item => item.id !== action.payload.id),\n          total: tot\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/reducers/wallet.js"],"names":["ADD_TOTAL","COIN_INFO","EXPENSES","DELETE_ITEM","INITIAL_STATE","currencies","expenses","total","wallet","state","action","type","payload","tot","parseFloat","toFixed","value","exchangeRates","currency","ask","filter","item","id"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,WAAzC,QAA4D,YAA5D;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;;AAMA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKV,SAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAA/B,OAAP;;AACF,SAAKV,QAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoBI,MAAM,CAACE,OAA3B;AAAtB,OAAP;;AACF,SAAKZ,SAAL;AAAgB;AACd,cAAMa,GAAG,GAAGJ,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE,OAAjC;AACA,eAAO,EAAE,GAAGH,KAAL;AAAYF,UAAAA,KAAK,EAAEO,UAAU,CAACD,GAAG,CAACE,OAAJ,CAAY,CAAZ,CAAD;AAA7B,SAAP;AACD;;AACD,SAAKZ,WAAL;AAAkB;AAChB,cAAMU,GAAG,GAAGJ,KAAK,CAACF,KAAN,GACVG,MAAM,CAACE,OAAP,CAAeI,KAAf,GAAuBN,MAAM,CAACE,OAAP,CAAeK,aAAf,CAA6BP,MAAM,CAACE,OAAP,CAAeM,QAA5C,EAAsDC,GAD/E;AAEA,eAAO,EACL,GAAGV,KADE;AAELH,UAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAec,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYZ,MAAM,CAACE,OAAP,CAAeU,EAA3D,CAFL;AAGLf,UAAAA,KAAK,EAAGM;AAHH,SAAP;AAKD;;AACD;AACE,aAAOJ,KAAP;AAnBF;AAqBD,CAtBD;;AAwBA,eAAeD,MAAf","sourcesContent":["import { ADD_TOTAL, COIN_INFO, EXPENSES, DELETE_ITEM } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  total: 0,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case COIN_INFO:\n    return { ...state, currencies: action.payload };\n  case EXPENSES:\n    return { ...state, expenses: [...state.expenses, action.payload] };\n  case ADD_TOTAL: {\n    const tot = state.total + action.payload;\n    return { ...state, total: parseFloat(tot.toFixed(2)) };\n  }\n  case DELETE_ITEM: {\n    const tot = state.total - (\n      action.payload.value * action.payload.exchangeRates[action.payload.currency].ask);\n    return {\n      ...state,\n      expenses: state.expenses.filter((item) => item.id !== action.payload.id),\n      total: (tot),\n    };\n  }\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"]},"metadata":{},"sourceType":"module"}