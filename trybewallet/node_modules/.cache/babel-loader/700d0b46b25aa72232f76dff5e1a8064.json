{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport WalletHeader from './WalletHeader';\nimport { fetchCoins, setExpenses } from '../actions';\nimport WalletForm from './WalletForm';\nimport WalletTable from './WalletTable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {\n        id: 0,\n        value: 0,\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação'\n      },\n      moeda: 'BRL'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      sendCoin\n    } = this.props;\n    sendCoin();\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState(prevState => ({\n      expense: { ...prevState.expense,\n        [name]: value\n      }\n    }));\n  }\n\n  handleButton() {\n    const {\n      sendExpenses\n    } = this.props;\n    const {\n      expense\n    } = this.state;\n    sendExpenses(expense);\n    this.setState(prevState => ({\n      expense: { ...prevState.expense,\n        id: prevState.expense.id + 1\n      }\n    }));\n  }\n\n  render() {\n    const {\n      user,\n      wallet\n    } = this.props;\n    const {\n      moeda\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WalletHeader, {\n      total: wallet.total,\n      moeda: moeda,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: [\"fab\", \"github\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WalletForm, {\n      wallet: wallet,\n      onChange: this.handleChange,\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WalletTable, {\n      wallet: wallet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  wallet: state.wallet\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendCoin: () => dispatch(fetchCoins()),\n  sendExpenses: expense => dispatch(setExpenses(expense))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\nWallet.propTypes = {\n  sendCoin: PropTypes.func.isRequired,\n  sendExpenses: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string\n  }).isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n    expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n    total: PropTypes.number\n  })\n};\nWallet.defaultProps = {\n  wallet: {\n    total: 0\n  }\n};","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","PropTypes","connect","WalletHeader","fetchCoins","setExpenses","WalletForm","WalletTable","FontAwesomeIcon","Wallet","Component","constructor","props","state","expense","id","value","currency","method","tag","moeda","handleChange","bind","handleButton","componentDidMount","sendCoin","target","name","setState","prevState","sendExpenses","render","user","wallet","total","mapStateToProps","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape","email","string","currencies","arrayOf","expenses","object","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport WalletHeader from './WalletHeader';\nimport { fetchCoins, setExpenses } from '../actions';\nimport WalletForm from './WalletForm';\nimport WalletTable from './WalletTable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {\n        id: 0,\n        value: 0,\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação',\n      },\n      moeda: 'BRL',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  componentDidMount() {\n    const { sendCoin } = this.props;\n    sendCoin();\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState((prevState) => ({\n      expense: {\n        ...prevState.expense,\n        [name]: value,\n      },\n    }));\n  }\n\n  handleButton() {\n    const { sendExpenses } = this.props;\n    const { expense } = this.state;\n    sendExpenses(expense);\n    this.setState((prevState) => ({\n      expense: {\n        ...prevState.expense,\n        id: prevState.expense.id + 1,\n      },\n    }));\n  }\n\n  render() {\n    const { user, wallet } = this.props;\n    const { moeda } = this.state;\n    return (\n      <div>\n        <header>\n          <WalletHeader total={ wallet.total } moeda={ moeda } user={ user } />\n          <br />\n        </header>\n        <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\n        <WalletForm\n          wallet={ wallet }\n          onChange={ this.handleChange }\n          onClick={ this.handleButton }\n        />\n        <WalletTable wallet={ wallet } />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendCoin: () => dispatch(fetchCoins()),\n  sendExpenses: (expense) => dispatch(setExpenses(expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n\nWallet.propTypes = {\n  sendCoin: PropTypes.func.isRequired,\n  sendExpenses: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string,\n  }).isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n    expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n    total: PropTypes.number,\n  }),\n};\n\nWallet.defaultProps = {\n  wallet: {\n    total: 0,\n  },\n};\n"]},"metadata":{},"sourceType":"module"}