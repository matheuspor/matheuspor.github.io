{"ast":null,"code":"import { COIN_INFO, EXPENSES, TOTAL } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  total: 0\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case COIN_INFO:\n      return { ...state,\n        currencies: action.payload\n      };\n\n    case EXPENSES:\n      return { ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n\n    case TOTAL:\n      let tot = parseFloat(state.total + action.payload);\n      return { ...state,\n        total: tot\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/reducers/wallet.js"],"names":["COIN_INFO","EXPENSES","TOTAL","INITIAL_STATE","currencies","expenses","total","wallet","state","action","type","payload","tot","parseFloat"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,KAA9B,QAA2C,YAA3C;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;;AAMA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKV,SAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAA/B,OAAP;;AACF,SAAKV,QAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoBI,MAAM,CAACE,OAA3B;AAAtB,OAAP;;AACF,SAAKT,KAAL;AACE,UAAIU,GAAG,GAAGC,UAAU,CAACL,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE,OAAtB,CAApB;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,KAAK,EAAEM;AAAnB,OAAP;;AACF;AACE,aAAOJ,KAAP;AATF;AAWD,CAZD;;AAcA,eAAeD,MAAf","sourcesContent":["import { COIN_INFO, EXPENSES, TOTAL } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  total: 0,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case COIN_INFO:\n    return { ...state, currencies: action.payload };\n  case EXPENSES:\n    return { ...state, expenses: [...state.expenses, action.payload] };\n  case TOTAL:\n    let tot = parseFloat(state.total + action.payload);\n    return { ...state, total: tot };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"]},"metadata":{},"sourceType":"module"}