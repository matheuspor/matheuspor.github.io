{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/WalletHeader.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass WalletHeader extends React.Component {\n  render() {\n    const {\n      user: {\n        email\n      },\n      total = 0,\n      moeda\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, \"Email:\", ' ', email), ' ', \"|\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"Despesa Total: R$\", total), ' ', /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, moeda));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  total: state.wallet.expenses.reduce((acc, {\n    value,\n    currency,\n    exchangeRates\n  }) => acc + parseFloat(value * exchangeRates[currency].ask), 0).toFixed(2)\n});\n\nexport default connect(mapStateToProps)(WalletHeader);\nWalletHeader.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string\n  }).isRequired,\n  total: PropTypes.number,\n  moeda: PropTypes.string.isRequired\n};\nWalletHeader.defaultProps = {\n  total: 0\n};","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/WalletHeader.js"],"names":["React","PropTypes","connect","WalletHeader","Component","render","user","email","total","moeda","props","mapStateToProps","state","wallet","expenses","reduce","acc","value","currency","exchangeRates","parseFloat","ask","toFixed","propTypes","shape","string","isRequired","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF,OAAR;AAAmBC,MAAAA,KAAK,GAAG,CAA3B;AAA8BC,MAAAA;AAA9B,QAAwC,KAAKC,KAAnD;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,qBAAY,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEG,GAFH,EAGGH,KAHH,CADF,EAMG,GANH,OAQG,GARH,eASE;AAAM,qBAAY,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEGC,KAFH,CATF,EAaG,GAbH,eAcE;AAAM,qBAAY,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KADH,CAdF,CADF;AAmBD;;AAtBwC;;AAyB3C,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,IAAI,EAAEM,KAAK,CAACN,IADsB;AAElCE,EAAAA,KAAK,EAAEI,KAAK,CAACC,MAAN,CAAaC,QAAb,CAAsBC,MAAtB,CAA6B,CAACC,GAAD,EAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAN,KAClCH,GAAG,GAAGI,UAAU,CAACH,KAAK,GAAGE,aAAa,CAACD,QAAD,CAAb,CAAwBG,GAAjC,CADX,EAEJ,CAFI,EAEDC,OAFC,CAEO,CAFP;AAF2B,CAAZ,CAAxB;;AAOA,eAAepB,OAAO,CAACS,eAAD,CAAP,CAAyBR,YAAzB,CAAf;AAEAA,YAAY,CAACoB,SAAb,GAAyB;AACvBjB,EAAAA,IAAI,EAAEL,SAAS,CAACuB,KAAV,CAAgB;AACpBjB,IAAAA,KAAK,EAAEN,SAAS,CAACwB;AADG,GAAhB,EAEHC,UAHoB;AAIvBlB,EAAAA,KAAK,EAAEP,SAAS,CAAC0B,MAJM;AAKvBlB,EAAAA,KAAK,EAAER,SAAS,CAACwB,MAAV,CAAiBC;AALD,CAAzB;AAQAvB,YAAY,CAACyB,YAAb,GAA4B;AAC1BpB,EAAAA,KAAK,EAAE;AADmB,CAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass WalletHeader extends React.Component {\n  render() {\n    const { user: { email }, total = 0, moeda } = this.props;\n    return (\n      <div>\n        <span data-testid=\"email-field\">\n          Email:\n          {' '}\n          {email}\n        </span>\n        {' '}\n        |\n        {' '}\n        <span data-testid=\"total-field\">\n          Despesa Total: R$\n          {total}\n        </span>\n        {' '}\n        <span data-testid=\"header-currency-field\">\n          {moeda}\n        </span>\n      </div>);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  total: state.wallet.expenses.reduce((acc, { value, currency, exchangeRates }) => (\n    acc + parseFloat(value * exchangeRates[currency].ask)\n  ), 0).toFixed(2),\n});\n\nexport default connect(mapStateToProps)(WalletHeader);\n\nWalletHeader.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string,\n  }).isRequired,\n  total: PropTypes.number,\n  moeda: PropTypes.string.isRequired,\n};\n\nWalletHeader.defaultProps = {\n  total: 0,\n};\n"]},"metadata":{},"sourceType":"module"}