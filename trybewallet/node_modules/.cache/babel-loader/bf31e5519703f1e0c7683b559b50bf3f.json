{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setUserInfo } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttonDisabled: true,\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.checkButton = this.checkButton.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.checkButton();\n  }\n\n  checkButton() {\n    const {\n      email,\n      password,\n      buttonDisabled\n    } = this.state;\n    const MIN_PASS_LENGTH = 6;\n    const isEmailValid = email.endsWith('.com') || email.endsWith('.br');\n\n    if (isEmailValid && password.length >= MIN_PASS_LENGTH && buttonDisabled) {\n      this.setState({\n        buttonDisabled: false\n      });\n    } else {\n      this.setState({\n        buttonDisabled: true\n      });\n    }\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {\n      history,\n      setUser\n    } = this.props;\n    const {\n      email\n    } = this.state;\n    setUser(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const {\n      buttonDisabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"email-input\",\n      type: \"email\",\n      name: \"email\",\n      onChange: ({\n        target: {\n          name,\n          value\n        }\n      }) => this.setState({\n        [name]: value\n      }),\n      placeholder: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"password-input\",\n      type: \"password\",\n      name: \"password\",\n      onChange: ({\n        target: {\n          name,\n          value\n        }\n      }) => this.setState({\n        [name]: value\n      }),\n      placeholder: \"senha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: buttonDisabled,\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Entrar\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setUser: email => dispatch(setUserInfo(email))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\nLogin.propTypes = {\n  setUser: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Login.js"],"names":["React","connect","PropTypes","setUserInfo","Login","Component","constructor","props","state","buttonDisabled","email","password","handleChange","bind","checkButton","handleSubmit","componentDidUpdate","MIN_PASS_LENGTH","isEmailValid","endsWith","length","setState","target","name","value","event","preventDefault","history","setUser","push","render","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setUserInfo } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttonDisabled: true,\n      email: '',\n      password: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.checkButton = this.checkButton.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.checkButton();\n  }\n\n  checkButton() {\n    const { email, password, buttonDisabled } = this.state;\n    const MIN_PASS_LENGTH = 6;\n    const isEmailValid = email.endsWith('.com') || email.endsWith('.br');\n    if (isEmailValid && password.length >= MIN_PASS_LENGTH && buttonDisabled) {\n      this.setState({ buttonDisabled: false });\n    } else {\n      this.setState({ buttonDisabled: true });\n    }\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { history, setUser } = this.props;\n    const { email } = this.state;\n    setUser(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { buttonDisabled } = this.state;\n    return (\n      <div>\n        <div>\n          <input\n            data-testid=\"email-input\"\n            type=\"email\"\n            name=\"email\"\n            onChange={ ({ target: { name, value } }) => this.setState({ [name]: value }) }\n            placeholder=\"email\"\n          />\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n            name=\"password\"\n            onChange={ ({ target: { name, value } }) => this.setState({ [name]: value }) }\n            placeholder=\"senha\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          disabled={ buttonDisabled }\n          onClick={ this.handleSubmit }\n        >\n          Entrar\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUser: (email) => dispatch(setUserInfo(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  setUser: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}