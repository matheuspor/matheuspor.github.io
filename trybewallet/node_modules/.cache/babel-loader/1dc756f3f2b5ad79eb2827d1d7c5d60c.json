{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport WalletHeader from './WalletHeader';\nimport { deleteItem, editItem, fetchCoins, setExpenses } from '../actions';\nimport WalletForm from './WalletForm';\nimport WalletTable from './WalletTable';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {\n        id: 0,\n        value: 0,\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação'\n      },\n      moeda: 'BRL',\n      isEditing: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.editItem = this.editItem.bind(this);\n    this.editClick = this.editClick.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      sendCoin\n    } = this.props;\n    sendCoin();\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState(prevState => ({\n      expense: { ...prevState.expense,\n        [name]: value\n      }\n    }));\n  }\n\n  handleButton() {\n    const {\n      sendExpenses,\n      wallet\n    } = this.props;\n    const {\n      expense\n    } = this.state;\n    sendExpenses(expense);\n    this.setState(prevState => ({\n      expense: { ...prevState.expense,\n        id: wallet.expenses.length + 1\n      }\n    }), () => {});\n  }\n\n  deleteItem(item) {\n    const {\n      deleteExpense,\n      wallet\n    } = this.props;\n    this.setState(prevState => ({\n      expense: { ...prevState.expense,\n        id: wallet.expenses.length - 1\n      }\n    }), () => {\n      deleteExpense(item);\n    });\n  }\n\n  editItem(item) {\n    this.setState({\n      expense: item,\n      isEditing: true\n    });\n  }\n\n  editClick() {\n    const {\n      expense\n    } = this.state;\n    const {\n      setEditedItem,\n      wallet\n    } = this.props;\n    setEditedItem(expense);\n    this.setState(prevState => ({ ...prevState,\n      isEditing: false,\n      expense: { ...prevState.expense,\n        id: wallet.expenses.length\n      }\n    }));\n  }\n\n  render() {\n    const {\n      wallet\n    } = this.props;\n    const {\n      moeda,\n      isEditing,\n      expense\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WalletHeader, {\n      moeda: moeda,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(WalletForm, {\n      wallet: wallet,\n      onChange: this.handleChange,\n      onClick: this.handleButton,\n      editItem: isEditing,\n      expense: expense,\n      editClick: this.editClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WalletTable, {\n      deleteItem: this.deleteItem,\n      editItem: this.editItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  wallet: state.wallet\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendCoin: () => dispatch(fetchCoins()),\n  sendExpenses: expense => dispatch(setExpenses(expense)),\n  deleteExpense: item => dispatch(deleteItem(item)),\n  setEditedItem: item => dispatch(editItem(item))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\nWallet.propTypes = {\n  deleteExpense: PropTypes.func.isRequired,\n  sendCoin: PropTypes.func.isRequired,\n  sendExpenses: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string\n  }).isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n    expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n    total: PropTypes.number\n  })\n};\nWallet.defaultProps = {\n  wallet: {\n    total: 0\n  }\n};","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","PropTypes","connect","WalletHeader","deleteItem","editItem","fetchCoins","setExpenses","WalletForm","WalletTable","Wallet","Component","constructor","props","state","expense","id","value","currency","method","tag","moeda","isEditing","handleChange","bind","handleButton","editClick","componentDidMount","sendCoin","target","name","setState","prevState","sendExpenses","wallet","expenses","length","item","deleteExpense","setEditedItem","render","mapStateToProps","user","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape","email","string","currencies","arrayOf","object","total","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,UAA/B,EAA2CC,WAA3C,QAA8D,YAA9D;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,EAAE,EAAE,CADG;AAEPC,QAAAA,KAAK,EAAE,CAFA;AAGPC,QAAAA,QAAQ,EAAE,KAHH;AAIPC,QAAAA,MAAM,EAAE,UAJD;AAKPC,QAAAA,GAAG,EAAE;AALE,OADE;AAQXC,MAAAA,KAAK,EAAE,KARI;AASXC,MAAAA,SAAS,EAAE;AATA,KAAb;AAWA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKpB,UAAL,GAAkB,KAAKA,UAAL,CAAgBoB,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKnB,QAAL,GAAgB,KAAKA,QAAL,CAAcmB,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKf,KAA1B;AACAe,IAAAA,QAAQ;AACT;;AAEDL,EAAAA,YAAY,CAAC;AAAEM,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQb,MAAAA;AAAR;AAAV,GAAD,EAA8B;AACxC,SAAKc,QAAL,CAAeC,SAAD,KAAgB;AAC5BjB,MAAAA,OAAO,EAAE,EACP,GAAGiB,SAAS,CAACjB,OADN;AAEP,SAACe,IAAD,GAAQb;AAFD;AADmB,KAAhB,CAAd;AAMD;;AAEDQ,EAAAA,YAAY,GAAG;AACb,UAAM;AAAEQ,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAA2B,KAAKrB,KAAtC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACAmB,IAAAA,YAAY,CAAClB,OAAD,CAAZ;AACA,SAAKgB,QAAL,CAAeC,SAAD,KAAgB;AAC5BjB,MAAAA,OAAO,EAAE,EACP,GAAGiB,SAAS,CAACjB,OADN;AAEPC,QAAAA,EAAE,EAAEkB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB;AAFtB;AADmB,KAAhB,CAAd,EAKA,MAAM,CACL,CAND;AAOD;;AAEDhC,EAAAA,UAAU,CAACiC,IAAD,EAAO;AACf,UAAM;AAAEC,MAAAA,aAAF;AAAiBJ,MAAAA;AAAjB,QAA4B,KAAKrB,KAAvC;AACA,SAAKkB,QAAL,CAAeC,SAAD,KAAgB;AAC5BjB,MAAAA,OAAO,EAAE,EACP,GAAGiB,SAAS,CAACjB,OADN;AAEPC,QAAAA,EAAE,EAAEkB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB;AAFtB;AADmB,KAAhB,CAAd,EAKA,MAAM;AACJE,MAAAA,aAAa,CAACD,IAAD,CAAb;AACD,KAPD;AAQD;;AAEDhC,EAAAA,QAAQ,CAACgC,IAAD,EAAO;AACb,SAAKN,QAAL,CAAc;AACZhB,MAAAA,OAAO,EAAEsB,IADG;AAEZf,MAAAA,SAAS,EAAE;AAFC,KAAd;AAGD;;AAEDI,EAAAA,SAAS,GAAG;AACV,UAAM;AAAEX,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,UAAM;AAAEyB,MAAAA,aAAF;AAAiBL,MAAAA;AAAjB,QAA4B,KAAKrB,KAAvC;AACA0B,IAAAA,aAAa,CAACxB,OAAD,CAAb;AACA,SAAKgB,QAAL,CAAeC,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5BV,MAAAA,SAAS,EAAE,KAFiB;AAG5BP,MAAAA,OAAO,EAAE,EACP,GAAGiB,SAAS,CAACjB,OADN;AAEPC,QAAAA,EAAE,EAAEkB,MAAM,CAACC,QAAP,CAAgBC;AAFb;AAHmB,KAAhB,CAAd;AAQD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA;AAAF,QAAa,KAAKrB,KAAxB;AACA,UAAM;AAAEQ,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBP,MAAAA;AAApB,QAAgC,KAAKD,KAA3C;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAGO,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAGa,MADX;AAEE,MAAA,QAAQ,EAAG,KAAKX,YAFlB;AAGE,MAAA,OAAO,EAAG,KAAKE,YAHjB;AAIE,MAAA,QAAQ,EAAGH,SAJb;AAKE,MAAA,OAAO,EAAGP,OALZ;AAME,MAAA,SAAS,EAAG,KAAKW,SANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAaE,oBAAC,WAAD;AAAa,MAAA,UAAU,EAAG,KAAKtB,UAA/B;AAA4C,MAAA,QAAQ,EAAG,KAAKC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AAiBD;;AApGkC;;AAuGrC,MAAMoC,eAAe,GAAI3B,KAAD,KAAY;AAClC4B,EAAAA,IAAI,EAAE5B,KAAK,CAAC4B,IADsB;AAElCR,EAAAA,MAAM,EAAEpB,KAAK,CAACoB;AAFoB,CAAZ,CAAxB;;AAKA,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,QAAQ,EAAE,MAAMgB,QAAQ,CAACtC,UAAU,EAAX,CADgB;AAExC2B,EAAAA,YAAY,EAAGlB,OAAD,IAAa6B,QAAQ,CAACrC,WAAW,CAACQ,OAAD,CAAZ,CAFK;AAGxCuB,EAAAA,aAAa,EAAGD,IAAD,IAAUO,QAAQ,CAACxC,UAAU,CAACiC,IAAD,CAAX,CAHO;AAIxCE,EAAAA,aAAa,EAAGF,IAAD,IAAUO,QAAQ,CAACvC,QAAQ,CAACgC,IAAD,CAAT;AAJO,CAAf,CAA3B;;AAOA,eAAenC,OAAO,CAACuC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjC,MAA7C,CAAf;AAEAA,MAAM,CAACmC,SAAP,GAAmB;AACjBP,EAAAA,aAAa,EAAErC,SAAS,CAAC6C,IAAV,CAAeC,UADb;AAEjBnB,EAAAA,QAAQ,EAAE3B,SAAS,CAAC6C,IAAV,CAAeC,UAFR;AAGjBd,EAAAA,YAAY,EAAEhC,SAAS,CAAC6C,IAAV,CAAeC,UAHZ;AAIjBL,EAAAA,IAAI,EAAEzC,SAAS,CAAC+C,KAAV,CAAgB;AACpBC,IAAAA,KAAK,EAAEhD,SAAS,CAACiD;AADG,GAAhB,EAEHH,UANc;AAOjBb,EAAAA,MAAM,EAAEjC,SAAS,CAAC+C,KAAV,CAAgB;AACtBG,IAAAA,UAAU,EAAElD,SAAS,CAACmD,OAAV,CAAkBnD,SAAS,CAACiD,MAA5B,EAAoCH,UAD1B;AAEtBZ,IAAAA,QAAQ,EAAElC,SAAS,CAACmD,OAAV,CAAkBnD,SAAS,CAACoD,MAA5B,EAAoCN,UAFxB;AAGtBO,IAAAA,KAAK,EAAErD,SAAS,CAACsD;AAHK,GAAhB;AAPS,CAAnB;AAcA7C,MAAM,CAAC8C,YAAP,GAAsB;AACpBtB,EAAAA,MAAM,EAAE;AACNoB,IAAAA,KAAK,EAAE;AADD;AADY,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport WalletHeader from './WalletHeader';\nimport { deleteItem, editItem, fetchCoins, setExpenses } from '../actions';\nimport WalletForm from './WalletForm';\nimport WalletTable from './WalletTable';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {\n        id: 0,\n        value: 0,\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação',\n      },\n      moeda: 'BRL',\n      isEditing: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.editItem = this.editItem.bind(this);\n    this.editClick = this.editClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { sendCoin } = this.props;\n    sendCoin();\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState((prevState) => ({\n      expense: {\n        ...prevState.expense,\n        [name]: value,\n      },\n    }));\n  }\n\n  handleButton() {\n    const { sendExpenses, wallet } = this.props;\n    const { expense } = this.state;\n    sendExpenses(expense);\n    this.setState((prevState) => ({\n      expense: {\n        ...prevState.expense,\n        id: wallet.expenses.length + 1,\n      } }),\n    () => {\n    });\n  }\n\n  deleteItem(item) {\n    const { deleteExpense, wallet } = this.props;\n    this.setState((prevState) => ({\n      expense: {\n        ...prevState.expense,\n        id: wallet.expenses.length - 1,\n      } }),\n    () => {\n      deleteExpense(item);\n    });\n  }\n\n  editItem(item) {\n    this.setState({\n      expense: item,\n      isEditing: true });\n  }\n\n  editClick() {\n    const { expense } = this.state;\n    const { setEditedItem, wallet } = this.props;\n    setEditedItem(expense);\n    this.setState((prevState) => ({\n      ...prevState,\n      isEditing: false,\n      expense: {\n        ...prevState.expense,\n        id: wallet.expenses.length,\n      },\n    }));\n  }\n\n  render() {\n    const { wallet } = this.props;\n    const { moeda, isEditing, expense } = this.state;\n    return (\n      <div>\n        <header>\n          <WalletHeader moeda={ moeda } />\n          <br />\n        </header>\n        <WalletForm\n          wallet={ wallet }\n          onChange={ this.handleChange }\n          onClick={ this.handleButton }\n          editItem={ isEditing }\n          expense={ expense }\n          editClick={ this.editClick }\n        />\n        <WalletTable deleteItem={ this.deleteItem } editItem={ this.editItem } />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendCoin: () => dispatch(fetchCoins()),\n  sendExpenses: (expense) => dispatch(setExpenses(expense)),\n  deleteExpense: (item) => dispatch(deleteItem(item)),\n  setEditedItem: (item) => dispatch(editItem(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n\nWallet.propTypes = {\n  deleteExpense: PropTypes.func.isRequired,\n  sendCoin: PropTypes.func.isRequired,\n  sendExpenses: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string,\n  }).isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n    expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n    total: PropTypes.number,\n  }),\n};\n\nWallet.defaultProps = {\n  wallet: {\n    total: 0,\n  },\n};\n"]},"metadata":{},"sourceType":"module"}