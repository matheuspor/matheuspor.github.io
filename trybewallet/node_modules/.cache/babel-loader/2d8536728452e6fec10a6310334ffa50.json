{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport WalletHeader from './WalletHeader';\nimport { fetchCoins, setExpenses } from '../actions';\nimport WalletForm from './WalletForm';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {},\n      total: 0,\n      moeda: 'BRL'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      sendCoin\n    } = this.props;\n    sendCoin();\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    const {\n      wallet: {\n        expenses\n      }\n    } = this.props;\n    this.setState(prevState => ({\n      expense: { ...prevState.expense,\n        [name]: value,\n        id: expenses.length\n      }\n    }));\n  }\n\n  async handleButton() {\n    const {\n      sendExpenses\n    } = this.props;\n    const {\n      expense,\n      total\n    } = this.state;\n    const despesa = expense.value += Number(total);\n    console.log(despesa);\n    sendExpenses(expense);\n    this.setState({\n      total: despesa\n    });\n  }\n\n  render() {\n    const {\n      user,\n      wallet\n    } = this.props;\n    const {\n      total,\n      moeda\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WalletHeader, {\n      total: total,\n      moeda: moeda,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WalletForm, {\n      wallet: wallet,\n      onChange: this.handleChange,\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  wallet: state.wallet\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendCoin: () => dispatch(fetchCoins()),\n  sendExpenses: expense => dispatch(setExpenses(expense))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\nWallet.propTypes = {\n  sendCoin: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string\n  }).isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired\n};","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","PropTypes","connect","WalletHeader","fetchCoins","setExpenses","WalletForm","Wallet","Component","constructor","props","state","expense","total","moeda","handleChange","bind","handleButton","componentDidMount","sendCoin","target","name","value","wallet","expenses","setState","prevState","id","length","sendExpenses","despesa","Number","console","log","render","user","mapStateToProps","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape","email","string","currencies","arrayOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport WalletHeader from './WalletHeader';\nimport { fetchCoins, setExpenses } from '../actions';\nimport WalletForm from './WalletForm';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {},\n      total: 0,\n      moeda: 'BRL',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  componentDidMount() {\n    const { sendCoin } = this.props;\n    sendCoin();\n  }\n\n  handleChange({ target: { name, value } }) {\n    const { wallet: { expenses } } = this.props;\n    this.setState((prevState) => ({\n      expense: {\n        ...prevState.expense,\n        [name]: value,\n        id: expenses.length,\n      },\n    }));\n  }\n\n  async handleButton() {\n    const { sendExpenses } = this.props;\n    const { expense, total } = this.state;\n    const despesa = expense.value += Number(total);\n    console.log(despesa);\n    sendExpenses(expense);\n    this.setState({ total: despesa });\n  }\n\n  render() {\n    const { user, wallet } = this.props;\n    const { total, moeda } = this.state;\n    return (\n      <div>\n        <WalletHeader total={ total } moeda={ moeda } user={ user } />\n        <br />\n        <WalletForm wallet={ wallet } onChange={ this.handleChange } onClick={ this.handleButton } />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendCoin: () => dispatch(fetchCoins()),\n  sendExpenses: (expense) => dispatch(setExpenses(expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n\nWallet.propTypes = {\n  sendCoin: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string,\n  }).isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}