{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport WalletHeader from './WalletHeader';\nimport { fetchCoins, setExpenses } from '../actions';\nimport WalletForm from './WalletForm';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {\n        value: 0,\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação'\n      },\n      total: 0,\n      moeda: 'BRL'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      sendCoin\n    } = this.props;\n    sendCoin();\n  }\n\n  setTotal() {\n    const {\n      wallet: {\n        expenses\n      }\n    } = this.props;\n    const item = expenses.length;\n    const currency = expenses.map;\n    console.log(item); // console.log(wallet.expenses[wallet.expenses.length - 1]);\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    const {\n      wallet: {\n        expenses\n      }\n    } = this.props;\n    this.setState(prevState => ({\n      expense: { ...prevState.expense,\n        [name]: value,\n        id: expenses.length\n      }\n    }));\n  }\n\n  handleButton() {\n    const {\n      sendExpenses,\n      wallet\n    } = this.props;\n    const {\n      expense,\n      total\n    } = this.state;\n    sendExpenses(expense); // const test = wallet.expenses.exchangeRates.find((item) => item.code === expense.currency);\n    // console.log(test);\n    // this.setState({ total: despesa });\n  }\n\n  render() {\n    const {\n      user,\n      wallet\n    } = this.props;\n    const {\n      total,\n      moeda\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WalletHeader, {\n      total: total,\n      moeda: moeda,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WalletForm, {\n      wallet: wallet,\n      onChange: this.handleChange,\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  wallet: state.wallet\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendCoin: () => dispatch(fetchCoins()),\n  sendExpenses: expense => dispatch(setExpenses(expense))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\nWallet.propTypes = {\n  sendCoin: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string\n  }).isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired\n};","map":{"version":3,"sources":["/home/matheus/Desktop/projects/sd-013-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","PropTypes","connect","WalletHeader","fetchCoins","setExpenses","WalletForm","Wallet","Component","constructor","props","state","expense","value","currency","method","tag","total","moeda","handleChange","bind","handleButton","componentDidMount","sendCoin","setTotal","wallet","expenses","item","length","map","console","log","target","name","setState","prevState","id","sendExpenses","render","user","mapStateToProps","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape","email","string","currencies","arrayOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport WalletHeader from './WalletHeader';\nimport { fetchCoins, setExpenses } from '../actions';\nimport WalletForm from './WalletForm';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {\n        value: 0,\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação',\n      },\n      total: 0,\n      moeda: 'BRL',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  componentDidMount() {\n    const { sendCoin } = this.props;\n    sendCoin();\n  }\n\n  setTotal() {\n    const { wallet: { expenses } } = this.props;\n    const item = expenses.length;\n    const currency = expenses.map;\n    console.log(item);\n    // console.log(wallet.expenses[wallet.expenses.length - 1]);\n  }\n\n  handleChange({ target: { name, value } }) {\n    const { wallet: { expenses } } = this.props;\n    this.setState((prevState) => ({\n      expense: {\n        ...prevState.expense,\n        [name]: value,\n        id: expenses.length,\n      },\n    }));\n  }\n\n  handleButton() {\n    const { sendExpenses, wallet } = this.props;\n    const { expense, total } = this.state;\n    sendExpenses(expense);\n    // const test = wallet.expenses.exchangeRates.find((item) => item.code === expense.currency);\n    // console.log(test);\n    // this.setState({ total: despesa });\n  }\n\n  render() {\n    const { user, wallet } = this.props;\n    const { total, moeda } = this.state;\n    return (\n      <div>\n        <WalletHeader total={ total } moeda={ moeda } user={ user } />\n        <br />\n        <WalletForm wallet={ wallet } onChange={ this.handleChange } onClick={ this.handleButton } />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendCoin: () => dispatch(fetchCoins()),\n  sendExpenses: (expense) => dispatch(setExpenses(expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n\nWallet.propTypes = {\n  sendCoin: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string,\n  }).isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}